# 配置真实数据源
spring.shardingsphere.datasource.names=write-ds,read-db-0,read-db-1
spring.shardingsphere.props.sql.show=true
# 配置第 1 个数据源
spring.shardingsphere.datasource.write-ds.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.write-ds.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.write-ds.url=jdbc:mysql://192.168.88.130:3306/ds0?useSSL=false
spring.shardingsphere.datasource.write-ds.username=root
spring.shardingsphere.datasource.write-ds.password=root
# 配置第 2 个数据源
spring.shardingsphere.datasource.read-db-0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.read-db-0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.read-db-0.url=jdbc:mysql://192.168.88.130:3307/ds0?useSSL=false
spring.shardingsphere.datasource.read-db-0.username=root
spring.shardingsphere.datasource.read-db-0.password=root
# 配置第 3 个数据源
spring.shardingsphere.datasource.read-db-1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.read-db-1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.read-db-1.url=jdbc:mysql://192.168.88.130:3308/ds0?useSSL=false
spring.shardingsphere.datasource.read-db-1.username=root
spring.shardingsphere.datasource.read-db-1.password=root
#配置读写分离
spring.shardingsphere.masterslave.name=re-d
spring.shardingsphere.masterslave.master-data-source-name=write-ds
spring.shardingsphere.masterslave.slave-data-source-names=read-db-0,read-db-1
spring.shardingsphere.masterslave.load-balance-algorithm-type=ROUND_ROBIN
#配置分库
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=master$->{user_id % 2}
#
#spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order$->{0..1}
#spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order$->{order_id % 2}
#spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
#spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item$->{0..1}
#spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item$->{order_id % 2}
#spring.shardingsphere.sharding.tables.t_order_item.key-generator.column=order_item_id
#spring.shardingsphere.sharding.tables.t_order_item.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.binding-tables=t_order,t_order_item
#spring.shardingsphere.sharding.broadcast-tables=t_config

